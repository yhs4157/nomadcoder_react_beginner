# 6.0 Introduction

    - state만 변화하는데 밑줄인 console.log를 출력해야함. 
    - 반대로 render만 사용하고 state를 사용하지 않을 방법이 있는가 ? 
    - 문제는 state 변화에 따라 모든 것이 다 바뀌는 것들. 

# 6.1 useEffect

    - 한 번만 콜할 필요가 있는 function을 한 번만 불러냄. 
    - state의 변화와 상관없이 한 번만 호출하면 된다는 것을 알 수 있음. 

# 6.2 Deps

    - input text로 만든 이후에 input에 내용을 추가해 넣으면 그 타이핑 숫자만큼 
    console.log를 출력함.
    
    - counter할 때마다 변화하고 싶지 않음. -> 목표는 영화이름만을 검색할 때 변화를 받아드리고 싶음. 
    ex)

        useEffect(() => {
            console.log(`SEARCH FOR ${keyword}`);
        });
            -> 한번만 출력함. 

        useEffect(() => {
                console.log(`SEARCH FOR ${keyword}`);
        }, []);
            -> 여러번 출력함. 

            useEffect(() => {
                    console.log(`SEARCH FOR ${keyword}`);
            }, [keyword]);
            -> keyword에서 출력함. 

    - 만약 []를 썼음에도 한 번만 출력된다면 감시할 state가 없어서이다. 

    - 만약 [counter, keyword]를 넣으면 두가지 모두 변화하여야 작동한다. 

# 6.3 Recap

# 6.4 Cleanup 

    - 많이 사용되느느 기능은 아니지만 한 번 보기로 한다 .
    - 근데 왜 함수안에 useEffect를 사용하지 이번에는 그냥 출력문을 넣어도 될텐데
    - 컴포넌트를 destroy하겠다. 
    - return () => {}; cleanup function 컴포넌트의 없애짐에 따라 행동을 취할 수도 있음. 
    - destroy function을 만들고 create function return에 넣으면 된다. 
    - 직접 입력해도 되고, arrow function을 사용해도 되고, 분리해서 만들어도 된다. 


